--- a/crypto/conf/conf_mod.c
+++ b/crypto/conf/conf_mod.c
@@ -705,8 +705,12 @@
         return OPENSSL_strdup("");
 
 #ifndef OPENSSL_SYS_VMS
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+    sep = "\\";
+#else
     sep = "/";
 #endif
+#endif
     size = strlen(t) + strlen(sep) + strlen(OPENSSL_CONF) + 1;
     file = OPENSSL_malloc(size);
 
--- a/crypto/cversion.c
+++ b/crypto/cversion.c
@@ -14,6 +14,12 @@
 #include "internal/common.h"
 #include "internal/thread_once.h"
 
+#include <openssl/opensslconf.h>
+
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+#include <windows.h>
+#endif
+
 #include "buildinf.h"
 
 #undef OPENSSLDIR
@@ -110,7 +116,28 @@
 #else
     case OPENSSL_DIR:
 # ifdef OPENSSLDIR
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+        static char temp[PATH_MAX + 1];
+        long rc;
+        HKEY hKey;
+        rc = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\eOI", 0, KEY_READ, &hKey);
+        if (rc == ERROR_SUCCESS) {
+            WCHAR wtemp[PATH_MAX + 1];
+            DWORD wtemp_len = PATH_MAX - 1;
+            rc = RegQueryValueExW(hKey, L"HomeDir", NULL, NULL, (LPBYTE) wtemp, &wtemp_len);
+            if (rc == ERROR_SUCCESS) {
+                RegCloseKey(hKey);
+                strcpy(temp, "OPENSSLDIR: \"");
+                WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, &temp[strlen(temp)], PATH_MAX - strlen(temp) - 1, NULL, NULL);
+                strcat(temp, "\"");
+                return temp;
+            }
+            RegCloseKey(hKey);
+        }
+        return "OPENSSLDIR: N/A";
+#else
         return "OPENSSLDIR: \"" OPENSSLDIR "\"";
+#endif
 # else
         return "OPENSSLDIR: N/A";
 # endif
--- a/crypto/engine/eng_list.c
+++ b/crypto/engine/eng_list.c
@@ -11,6 +11,12 @@
 /* We need to use some engine deprecated APIs */
 #define OPENSSL_SUPPRESS_DEPRECATED
 
+#include <openssl/opensslconf.h>
+
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+#include <windows.h>
+#endif
+
 #include "eng_local.h"
 
 /*
@@ -460,6 +466,25 @@
     if (strcmp(id, "dynamic")) {
         if ((load_dir = ossl_safe_getenv("OPENSSL_ENGINES")) == NULL)
             load_dir = ossl_get_enginesdir();
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+        if (load_dir == NULL) {
+            static char temp[PATH_MAX + 1];
+            long rc;
+            HKEY hKey;
+            load_dir = "engines";
+            rc = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\eOI", 0, KEY_READ, &hKey);
+            if (rc == ERROR_SUCCESS) {
+                WCHAR wtemp[PATH_MAX + 1];
+                DWORD wtemp_len = PATH_MAX;
+                rc = RegQueryValueExW(hKey, L"EnginesDir", NULL, NULL, (LPBYTE) wtemp, &wtemp_len);
+                if (rc == ERROR_SUCCESS) {
+                    WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, temp, PATH_MAX, NULL, NULL);
+                    load_dir = temp;
+                }
+                RegCloseKey(hKey);
+            }
+        }
+#endif
         iterator = ENGINE_by_id("dynamic");
         if (!iterator || !ENGINE_ctrl_cmd_string(iterator, "ID", id, 0) ||
             !ENGINE_ctrl_cmd_string(iterator, "DIR_LOAD", "2", 0) ||
--- a/crypto/rand/randfile.c
+++ b/crypto/rand/randfile.c
@@ -321,8 +321,12 @@
             return NULL;
         strcpy(buf, s);
 #ifndef OPENSSL_SYS_VMS
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+        strcat(buf, "\\");
+#else
         strcat(buf, "/");
 #endif
+#endif
         strcat(buf, RFILE);
     }
 
--- a/crypto/x509/x509_def.c
+++ b/crypto/x509/x509_def.c
@@ -7,6 +7,12 @@
  * https://www.openssl.org/source/license.html
  */
 
+#include <openssl/opensslconf.h>
+
+#if defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_MINGW64) || defined(OPENSSL_SYS_MINGW32)
+#include <windows.h>
+#endif
+
 #include <stdio.h>
 #include "internal/e_os.h"
 #include "internal/cryptlib.h"
@@ -45,6 +51,8 @@
 static CRYPTO_ONCE openssldir_setup_init = CRYPTO_ONCE_STATIC_INIT;
 DEFINE_RUN_ONCE_STATIC(do_openssldir_setup)
 {
+    HKEY hKey;
+
     get_windows_default_path(x509_private_dir, "\\private");
     if (strlen(x509_private_dir) > 0)
         x509_private_dirptr = x509_private_dir;
@@ -61,6 +69,28 @@
     if (strlen(x509_cert_file) > 0)
         x509_cert_fileptr = x509_cert_file;
 
+    if (RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"Software\\eOI", 0, KEY_READ, &hKey) == ERROR_SUCCESS) {
+        WCHAR wtemp[PATH_MAX + 1];
+        DWORD wtemp_len = PATH_MAX;
+        if (RegQueryValueExW(hKey, L"PrivateDir", NULL, NULL, (LPBYTE) wtemp, &wtemp_len) != ERROR_SUCCESS) {
+            WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, x509_private_dir, PATH_MAX, NULL, NULL);
+            x509_private_dirptr = x509_private_dir;
+        }
+        if (RegQueryValueExW(hKey, L"CertArea", NULL, NULL, (LPBYTE) wtemp, &wtemp_len) != ERROR_SUCCESS) {
+            WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, x509_cert_area, PATH_MAX, NULL, NULL);
+            x509_cert_areaptr = x509_cert_area;
+        }
+        if (RegQueryValueExW(hKey, L"CertDir", NULL, NULL, (LPBYTE) wtemp, &wtemp_len) != ERROR_SUCCESS) {
+            WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, x509_cert_dir, PATH_MAX, NULL, NULL);
+            x509_cert_dirptr = x509_cert_dir;
+        }
+        if (RegQueryValueExW(hKey, L"CertFile", NULL, NULL, (LPBYTE) wtemp, &wtemp_len) != ERROR_SUCCESS) {
+            WideCharToMultiByte(CP_ACP, 0, wtemp, wtemp_len, x509_cert_file, PATH_MAX, NULL, NULL);
+            x509_cert_fileptr = x509_cert_file;
+        }
+        RegCloseKey(hKey);
+    }
+
     return 1;
 }
 #endif
--- a/exporters/pkg-config/libcrypto.pc.in
+++ b/exporters/pkg-config/libcrypto.pc.in
@@ -17,7 +17,7 @@
 Name: OpenSSL-libcrypto
 Description: OpenSSL cryptography library
 Version: {- $OpenSSL::safe::installdata::VERSION -}
-Libs: -L${libdir} -lcrypto
+Libs: -L${libdir} -leOI32
 Libs.private: {- join(' ', @OpenSSL::safe::installdata::LDLIBS) -}
 Cflags:{- $OUT = ' -I${includedir}';
           if (scalar @OpenSSL::safe::installdata::INCLUDEDIR_REL_PREFIX > 1) {

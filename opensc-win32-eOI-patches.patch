--- a/configure.ac
+++ b/configure.ac
@@ -2,22 +2,22 @@
 
 AC_PREREQ(2.68)
 
-define([PRODUCT_NAME], [OpenSC])
-define([PRODUCT_TARNAME], [opensc])
-define([PRODUCT_BUGREPORT], [https://github.com/OpenSC/OpenSC/issues])
-define([PRODUCT_URL], [https://github.com/OpenSC/OpenSC])
+define([PRODUCT_NAME], [eOI])
+define([PRODUCT_TARNAME], [eOI])
+define([PRODUCT_BUGREPORT], [https://github.com/llogar/eOI/issues])
+define([PRODUCT_URL], [https://github.com/llogar/eOI])
 define([PACKAGE_VERSION_MAJOR], [0])
 define([PACKAGE_VERSION_MINOR], [23])
 define([PACKAGE_VERSION_FIX], [0])
 define([PACKAGE_SUFFIX], [])
 
 define([VS_FF_LEGAL_COPYRIGHT], [OpenSC Project])
-define([VS_FF_LEGAL_COMPANY_NAME], [OpenSC Project])
-define([VS_FF_LEGAL_COMPANY_URL], [https://github.com/OpenSC])
+define([VS_FF_LEGAL_COMPANY_NAME], [eOI])
+define([VS_FF_LEGAL_COMPANY_URL], [https://github.com/llogar/eOI])
 define([VS_FF_COMMENTS], [Provided under the terms of the GNU Lesser General Public License (LGPLv2.1+).])
-define([VS_FF_PRODUCT_NAME], [OpenSC smartcard framework])
-define([VS_FF_PRODUCT_UPDATES], [https://github.com/OpenSC/OpenSC/releases])
-define([VS_FF_PRODUCT_URL], [https://github.com/OpenSC/OpenSC])
+define([VS_FF_PRODUCT_NAME], [eOI])
+define([VS_FF_PRODUCT_UPDATES], [https://github.com/llogar/eOI/releases])
+define([VS_FF_PRODUCT_URL], [https://github.com/llogar/eOI])
 
 m4_sinclude(m4/version.m4.ci)
 
@@ -799,7 +799,7 @@
 if test "${cvcdir}" = "" ; then
 	case "${host}" in
 		*-mingw*|*-winnt*|*-cygwin*)
-			cvcdir="%PROGRAMFILES%\\\OpenSC Project\\\OpenSC\\\cvc"
+			cvcdir="%PROGRAMFILES%\\\eOI\\\cvc"
 			;;
 		*)
 			AC_MSG_WARN([use --enable-cvcdir=DIR])
@@ -826,7 +826,7 @@
 then
 	case "${host}" in
 		*-mingw*|*-winnt*|*-cygwin*)
-			x509dir="%PROGRAMFILES%\\\OpenSC Project\\\OpenSC\\\x509"
+			x509dir="%PROGRAMFILES%\\\eOI\\\x509"
 			;;
 		*)
 			AC_MSG_WARN([use --enable-x509dir=DIR])
@@ -973,7 +973,7 @@
 	DEFAULT_SM_MODULE="${LIB_PRE}smm-local${DYN_LIB_EXT}"
 	case "${host}" in
 		*-mingw*|*-winnt*|*-cygwin*)
-			DEFAULT_SM_MODULE_PATH="%PROGRAMFILES%\\\OpenSC Project\\\OpenSC\\\tools"
+			DEFAULT_SM_MODULE_PATH="%PROGRAMFILES%\\\eOI\\\tools"
 		;;
 		*)
 			DEFAULT_SM_MODULE_PATH="${libdir}"
--- a/src/libopensc/card.c
+++ b/src/libopensc/card.c
@@ -1576,7 +1576,7 @@
 #ifdef _WIN32
 	if (!module_path || strlen(module_path) == 0)   {
 		temp_len = PATH_MAX-1;
-		rv = sc_ctx_win32_get_config_value(NULL, "SmDir", "Software\\OpenSC Project\\OpenSC",
+		rv = sc_ctx_win32_get_config_value(NULL, "SmDir", "Software\\eOI",
 				temp_path, &temp_len);
 		if (rv == SC_SUCCESS) {
 			temp_path[temp_len] = '\0';
--- a/src/libopensc/ctx.c
+++ b/src/libopensc/ctx.c
@@ -213,7 +213,7 @@
 		return SC_ERROR_INVALID_ARGUMENTS;
 
 	if (!name_key)
-		name_key = "Software\\OpenSC Project\\OpenSC";
+		name_key = "Software\\eOI";
 
 	rc = RegOpenKeyExA(HKEY_CURRENT_USER, name_key, 0, KEY_QUERY_VALUE, &hKey);
 	if (rc == ERROR_SUCCESS) {
@@ -700,7 +700,7 @@
 	memset(ctx->conf_blocks, 0, sizeof(ctx->conf_blocks));
 #ifdef _WIN32
 	temp_len = PATH_MAX-1;
-	r = sc_ctx_win32_get_config_value("OPENSC_CONF", "ConfigFile", "Software\\OpenSC Project\\OpenSC",
+	r = sc_ctx_win32_get_config_value("OPENSC_CONF", "ConfigFile", "Software\\eOI",
 		temp_path, &temp_len);
 	if (r)   {
 		sc_log(ctx, "process_config_file doesn't find opensc config file. Please set the registry key.");
@@ -708,6 +708,8 @@
 	}
 	temp_path[temp_len] = '\0';
 	conf_path = temp_path;
+	if (getenv("OPENSC_CONF") != NULL)
+		conf_path = getenv("OPENSC_CONF");
 #else
 	conf_path = getenv("OPENSC_CONF");
 	if (!conf_path)
--- a/src/minidriver/cardmod-mingw-compat.h
+++ b/src/minidriver/cardmod-mingw-compat.h
@@ -22,21 +22,14 @@
 #define __deref_opt_out_bcount(x)
 #define __deref_out_bcount(x)
 #define __deref_out_bcount_opt(x)
-#define __deref_out_ecount(x)
 #define __in
-#define __in_bcount(x)
 #define __in_bcount_opt(x)
-#define __in_ecount(x)
 #define __in_opt
 #define __inout
-#define __inout_bcount_full(x)
 #define __inout_bcount_opt(x)
 #define __out
-#define __out_bcount(x)
-#define __out_bcount_full(x)
 #define __out_bcount_part_opt(x,y)
 #define __out_bcount_part_opt(x,y)
-#define __out_ecount(x)
 #define __out_opt
 #define __struct_bcount(x)
 #define __success(x)
--- a/src/minidriver/minidriver.c
+++ b/src/minidriver/minidriver.c
@@ -37,8 +37,13 @@
 
 #include <windows.h>
 #include <Commctrl.h>
-#include <timeapi.h>
-#include "cardmod.h"
+
+static unsigned int timeGetTime()
+{
+ struct timeval now;
+ mingw_gettimeofday(&now, NULL);
+ return now.tv_usec/1000;
+}
 
 #include "common/compat_strlcpy.h"
 #include "libopensc/asn1.h"
@@ -146,7 +151,7 @@
  /* defined twice: in versioninfo-minidriver.rc.in and in minidriver.c */
 #define IDI_SMARTCARD   102
 
-#define SUBKEY_ENABLE_CANCEL "Software\\OpenSC Project\\OpenSC\\md_pinpad_dlg_enable_cancel"
+#define SUBKEY_ENABLE_CANCEL "Software\\eOI\\md_pinpad_dlg_enable_cancel"
 
 /* magic to determine previous pinpad authentication */
 #define MAGIC_SESSION_PIN "opensc-minidriver"
@@ -261,7 +266,7 @@
 	int rv;
 
 	rv = sc_ctx_win32_get_config_value("CARDMOD_LOW_LEVEL_DEBUG",
-			"MiniDriverDebug", "Software\\OpenSC Project\\OpenSC",
+			"MiniDriverDebug", "Software\\eOI",
 			(char *)(&md_debug), &sz);
 	if (rv == SC_SUCCESS && md_debug != 0)   {
 		FILE *lldebugfp = fopen("C:\\tmp\\md.log","a+");
@@ -3053,6 +3058,8 @@
 }
 
 
+static HMODULE comctl32 = NULL;
+static HRESULT (*TaskDialogIndirectPtr)(const TASKDIALOGCONFIG *pTaskConfig, int *pnButton, int *pnRadioButton, BOOL *pfVerificationFlagChecked);
 
 static int 
 md_dialog_perform_pin_operation(PCARD_DATA pCardData, int operation, struct sc_pkcs15_card *p15card,
@@ -3068,6 +3075,13 @@
 	BOOL checked, user_checked;
 	VENDOR_SPECIFIC* pv = (VENDOR_SPECIFIC*)(pCardData->pvVendorSpecific);
 
+	if (comctl32 == NULL) {
+		comctl32 = LoadLibrary("COMCTL32.DLL");
+		if (comctl32 != NULL) {
+			TaskDialogIndirectPtr = (void*)GetProcAddress(comctl32, "TaskDialogIndirect");
+		}
+	}
+
 	/* stack the parameters */
 	parameter[0] = (LONG_PTR)operation;
 	parameter[1] = (LONG_PTR)p15card;
@@ -3156,7 +3170,8 @@
 	tc.lpCallbackData = (LONG_PTR)parameter;
 	tc.cbSize = sizeof(tc);
 
-	result = TaskDialogIndirect(&tc, NULL, NULL, &user_checked);
+	if (TaskDialogIndirectPtr)
+		result = TaskDialogIndirectPtr(&tc, NULL, NULL, &user_checked);
 
 	if (user_checked != checked) {
 		if (pv && pv->ctx && pv->ctx->exe_path) {
--- a/src/minidriver/versioninfo-minidriver.rc.in
+++ b/src/minidriver/versioninfo-minidriver.rc.in
@@ -1,5 +1,7 @@
 #include <winresrc.h>
 
+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "opensc-minidriver.dll.manifest"
+
 #define IDC_STATIC -1
 /* defined twice: in resource file and in source code */
 #define IDI_SMARTCARD       102
@@ -31,7 +33,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/src/pkcs11/pkcs11-spy.c
+++ b/src/pkcs11/pkcs11-spy.c
@@ -228,9 +228,9 @@
 		/* try for the machine version first, as we may be running
 		 * without a user during login
 		 */
-		rc = RegOpenKeyEx( HKEY_LOCAL_MACHINE, "Software\\OpenSC Project\\PKCS11-Spy", 0, KEY_QUERY_VALUE, &hKey );
+		rc = RegOpenKeyEx( HKEY_LOCAL_MACHINE, "Software\\eOI\\PKCS11-Spy", 0, KEY_QUERY_VALUE, &hKey );
 		if (rc != ERROR_SUCCESS )
-			rc = RegOpenKeyEx( HKEY_CURRENT_USER, "Software\\OpenSC Project\\PKCS11-Spy", 0, KEY_QUERY_VALUE, &hKey );
+			rc = RegOpenKeyEx( HKEY_CURRENT_USER, "Software\\eOI\\PKCS11-Spy", 0, KEY_QUERY_VALUE, &hKey );
 
 		if( rc == ERROR_SUCCESS ) {
 			temp_len = PATH_MAX;
@@ -263,10 +263,10 @@
 		/* try for the machine version first, as we may be running
 		 * without a user during login
 		 */
-		rc = RegOpenKeyEx( HKEY_LOCAL_MACHINE, "Software\\OpenSC Project\\PKCS11-Spy",
+		rc = RegOpenKeyEx( HKEY_LOCAL_MACHINE, "Software\\eOI\\PKCS11-Spy",
 				0, KEY_QUERY_VALUE, &hKey );
 		if (rc != ERROR_SUCCESS)
-			rc = RegOpenKeyEx( HKEY_CURRENT_USER, "Software\\OpenSC Project\\PKCS11-Spy",
+			rc = RegOpenKeyEx( HKEY_CURRENT_USER, "Software\\eOI\\PKCS11-Spy",
 					0, KEY_QUERY_VALUE, &hKey );
 
 		if (rc == ERROR_SUCCESS) {
--- a/src/pkcs11/versioninfo-pkcs11-spy.rc.in
+++ b/src/pkcs11/versioninfo-pkcs11-spy.rc.in
@@ -1,5 +1,7 @@
 #include <winresrc.h>
 
+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "opensc-pkcs11.dll.manifest"
+
 VS_VERSION_INFO VERSIONINFO
 	FILEVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
 	PRODUCTVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
@@ -21,7 +23,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/src/pkcs11/versioninfo-pkcs11.rc.in
+++ b/src/pkcs11/versioninfo-pkcs11.rc.in
@@ -1,5 +1,7 @@
 #include <winresrc.h>
 
+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "opensc-pkcs11.dll.manifest"
+
 VS_VERSION_INFO VERSIONINFO
 	FILEVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
 	PRODUCTVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
@@ -21,7 +23,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/src/pkcs15init/profile.c
+++ b/src/pkcs15init/profile.c
@@ -343,7 +343,7 @@
 	if (!profile_dir) {
 #ifdef _WIN32
 		temp_len = PATH_MAX - 1;
-		res = sc_ctx_win32_get_config_value(NULL, "ProfileDir", "Software\\OpenSC Project\\OpenSC",
+		res = sc_ctx_win32_get_config_value(NULL, "ProfilesDir", "Software\\eOI",
 				temp_path, &temp_len);
 		if (res)
 			LOG_FUNC_RETURN(ctx, res);
--- a/src/tools/Makefile.am
+++ b/src/tools/Makefile.am
@@ -119,10 +119,13 @@
 if HAVE_UNKNOWN_WARNING_OPTION
 egk_tool_CFLAGS += -Wno-unknown-warning-option
 endif
+if WIN32
+eOI_notify_LDFLAGS = -mwindows
+endif
 
 goid_tool_SOURCES = goid-tool.c util.c fread_to_eof.c goid-tool-cmdline.c
 goid_tool_LDADD = $(OPENPACE_LIBS)
-goid_tool_CFLAGS = $(OPENPACE_CFLAGS)
+goid_tool_CFLAGS = $(OPENSSL_CFLAGS) $(OPENPACE_CFLAGS)
 if HAVE_UNKNOWN_WARNING_OPTION
 goid_tool_CFLAGS += -Wno-unknown-warning-option
 endif
--- a/src/tools/util.c
+++ b/src/tools/util.c
@@ -471,8 +471,8 @@
 	}
 #ifndef _WIN32
 	tcsetattr (fileno (stdout), TCSAFLUSH, &old);
-	fputs("\n", stdout);
 #endif
+	fputs("\n", stdout);
 	if (ch == 0 || ch == 3) {
 		free(buf);
 		return -1;
--- a/src/tools/versioninfo-opensc-notify.rc.in
+++ b/src/tools/versioninfo-opensc-notify.rc.in
@@ -1,5 +1,7 @@
 #include <winresrc.h>
 
+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "exe.manifest"
+
 #define IDC_STATIC -1
 /* defined twice: in resource file and in source code */
 #define IDI_SMARTCARD       102
@@ -31,7 +33,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/src/tools/versioninfo-tools.rc.in
+++ b/src/tools/versioninfo-tools.rc.in
@@ -1,5 +1,7 @@
 #include <winresrc.h>
 
+CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "exe.manifest"
+
 VS_VERSION_INFO VERSIONINFO
 	FILEVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
 	PRODUCTVERSION @OPENSC_VERSION_MAJOR@,@OPENSC_VERSION_MINOR@,@OPENSC_VERSION_FIX@,@OPENSC_VERSION_REVISION@
@@ -21,7 +23,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/src/ui/invisible_window.h
+++ b/src/ui/invisible_window.h
@@ -20,7 +20,7 @@
 
 #include <windows.h>
 
-HWND create_invisible_window(LPCTSTR lpszClassName,
+static HWND create_invisible_window(LPCTSTR lpszClassName,
 		LRESULT (CALLBACK* WndProc)(HWND, UINT, WPARAM, LPARAM),
 		HINSTANCE hInstance)
 {
--- a/src/ui/notify.c
+++ b/src/ui/notify.c
@@ -66,6 +66,11 @@
 
 #if defined(ENABLE_NOTIFY) && defined(_WIN32)
 
+#pragma push_macro("NTDDI_VERSION")
+#undef NTDDI_VERSION
+
+#define NTDDI_VERSION 0x06000000
+
 #include "common/compat_strlcpy.h"
 #include "invisible_window.h"
 #include "wchar_from_char_str.h"
@@ -85,6 +90,11 @@
 // we need commctrl v6 for LoadIconMetric()
 #include <commctrl.h>
 
+static HMODULE comctl32 = NULL;
+static HRESULT (*LoadIconMetricPtr)(HINSTANCE hinst, PCWSTR pszName, int lims, HICON *phico);
+
+#pragma pop_macro("NTDDI_VERSION")
+
 LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
 {
 	switch (message) {
@@ -140,6 +150,13 @@
 		return FALSE;
 	}
 
+	if (comctl32 == NULL) {
+		comctl32 = LoadLibrary("COMCTL32.DLL");
+		if (comctl32 != NULL) {
+			LoadIconMetricPtr = (void*)GetProcAddress(comctl32, "LoadIconMetric");
+		}
+	}
+
 	nid.cbSize = sizeof(NOTIFYICONDATA);
 	nid.hWnd = sc_notify_hwnd;
 	// add the icon, setting the icon, tooltip, and callback message.
@@ -147,7 +164,10 @@
 	nid.uFlags = NIF_ICON | NIF_TIP | NIF_MESSAGE | NIF_SHOWTIP | NIF_GUID;
 	nid.guidItem = myGUID; 
 	nid.uCallbackMessage = WMAPP_NOTIFYCALLBACK;
-	LoadIconMetric(sc_notify_instance, MAKEINTRESOURCEW(IDI_SMARTCARD), LIM_SMALL, &nid.hIcon);
+	if (LoadIconMetricPtr != NULL)
+		LoadIconMetricPtr(sc_notify_instance, MAKEINTRESOURCEW(IDI_SMARTCARD), LIM_SMALL, &nid.hIcon);
+	else
+		nid.hIcon = LoadIcon(sc_notify_instance, MAKEINTRESOURCE(IDI_SMARTCARD));
 	if (GetModuleFileName(NULL, path, ARRAYSIZE(path))) {
 		const char *basename = strrchr(path, '\\');
 		if (basename) {
@@ -160,7 +180,7 @@
 				return FALSE;
 			}
 		}
-		strlcpy(nid.szTip, path, ARRAYSIZE(nid.szTip));
+		strlcpy(nid.szTip, "eOI notifier"/*path*/, ARRAYSIZE(nid.szTip));
 	} else {
 		strcpy(nid.szTip, PACKAGE_NAME);
 	}
--- a/src/ui/strings.c
+++ b/src/ui/strings.c
@@ -172,7 +172,7 @@
 		}
 #endif
 	}
-
+	lang = EN;
 	/* load default strings */
 	switch (lang) {
 		case DE:
--- a/win32/versioninfo-customactions.rc.in
+++ b/win32/versioninfo-customactions.rc.in
@@ -21,7 +21,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/win32/versioninfo.rc.in
+++ b/win32/versioninfo.rc.in
@@ -21,7 +21,6 @@
 			VALUE "CompanyName", "@OPENSC_VS_FF_COMPANY_NAME@"
 			VALUE "FileVersion", "@OPENSC_VERSION_MAJOR@.@OPENSC_VERSION_MINOR@.@OPENSC_VERSION_FIX@.@OPENSC_VERSION_REVISION@"
 			VALUE "InternalName", "@PACKAGE_NAME@"
-			VALUE "LegalCopyright", "@OPENSC_VS_FF_LEGAL_COPYRIGHT@"
 			VALUE "LegalTrademarks", ""
 			VALUE "PrivateBuild", ""
 			VALUE "ProductName", "@OPENSC_VS_FF_PRODUCT_NAME@"
--- a/win32/winconfig.h.in
+++ b/win32/winconfig.h.in
@@ -56,7 +56,7 @@
 #define ENABLE_SHARED 1
 #define ENABLE_NOTIFY 1
 
-#define SC_PKCS15_PROFILE_DIRECTORY "C:\\Program Files\\OpenSC Project\\OpenSC\\profiles"
+#define SC_PKCS15_PROFILE_DIRECTORY "C:\\Program Files\\eOI\\profiles"
 
 #define PATH_MAX FILENAME_MAX
 
@@ -93,7 +93,7 @@
 #endif
 
 #ifndef CVCDIR
-#define CVCDIR "%PROGRAMFILES%\\OpenSC Project\\OpenSC\\cvc"
+#define CVCDIR "%PROGRAMFILES%\\eOI\\cvc"
 #endif
 
 #ifndef DEFAULT_PKCS11_PROVIDER

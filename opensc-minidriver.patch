--- a/src/minidriver/minidriver.c
+++ b/src/minidriver/minidriver.c
@@ -36,7 +36,11 @@
 #include <time.h>
 
 #include <windows.h>
-#include <Commctrl.h>
+#pragma push_macro("NTDDI_VERSION")
+#undef NTDDI_VERSION
+#define NTDDI_VERSION 0x06000000
+#include <commctrl.h>
+#pragma pop_macro("NTDDI_VERSION")
 
 static unsigned int timeGetTime()
 {
@@ -826,7 +826,7 @@
 md_is_guid_as_label(PCARD_DATA pCardData)
 {
 	logprintf(pCardData, 2, "Is GUID has to be used as label of crypto objects?\n");
-	return md_get_config_bool(pCardData, "md_guid_as_label", FALSE);
+	return md_get_config_bool(pCardData, "md_guid_as_label", TRUE);
 }
 
 
@@ -1048,7 +1052,7 @@
 	memset(new_dir, 0, sizeof(struct md_directory));
 
 	strlcpy((char *)new_dir->name, name, sizeof(new_dir->name));
-	new_dir->acl = acl;
+	new_dir->acl = (CARD_DIRECTORY_ACCESS_CONDITION)acl;
 
 	if (*head == NULL)   {
 		*head = new_dir;
@@ -2195,7 +2199,7 @@
 	if (dwret != SCARD_S_SUCCESS)
 		goto ret_cleanup;
 
-	dwret = md_fs_add_directory(pCardData, &(vs->root.subdirs), "mscp", UserCreateDeleteDirAc, &mscp);
+	dwret = md_fs_add_directory(pCardData, &(vs->root.subdirs), "mscp", (CARD_FILE_ACCESS_CONDITION)UserCreateDeleteDirAc, &mscp);
 	if (dwret != SCARD_S_SUCCESS)
 		goto ret_cleanup;
 
@@ -4978,6 +4982,7 @@
 				dwret = SCARD_E_INVALID_VALUE;
 				goto err;
 		}
+		opt_crypt_flags &= ~SC_ALGORITHM_RSA_PADS;
 	} else {
 		logprintf(pCardData, 0, "invalid private key\n");
 		dwret = SCARD_E_INVALID_VALUE;
@@ -6447,8 +6452,19 @@
 		if (dwFlags >= MD_MAX_PINS)
 			MD_FUNC_RETURN(pCardData, 1, SCARD_E_INVALID_PARAMETER);
 
-		if (!vs->pin_objs[dwFlags])
+		if (!vs->pin_objs[dwFlags]) {
+			if (dwFlags == ROLE_EVERYONE) {
+				/* Return dummy values for non-existing PIN, so eOI 'Prijava brez PIN-a' works */
+				p->PinPurpose = PrimaryCardPin;
+				p->PinCachePolicy.dwVersion = PIN_CACHE_POLICY_CURRENT_VERSION;
+				p->PinCachePolicy.PinCachePolicyType = PinCacheNone;
+				p->PinCachePolicy.dwPinCachePolicyInfo = 0;
+				p->dwChangePermission = 0;
+				p->dwUnblockPermission = 0;
+				MD_FUNC_RETURN(pCardData, 1, SC_SUCCESS);
+			}
 			MD_FUNC_RETURN(pCardData, 1, SCARD_E_INVALID_PARAMETER);
+		}
 
 		p->PinType = vs->reader->capabilities & SC_READER_CAP_PIN_PAD
 			|| vs->p15card->card->caps & SC_CARD_CAP_PROTECTED_AUTHENTICATION_PATH
@@ -7239,7 +7243,7 @@
 	{
 	case DLL_PROCESS_ATTACH:
 		g_inst = hinstDLL;
-		sc_notify_instance = hinstDLL;
+//		sc_notify_instance = hinstDLL;
 		sc_notify_init();
 		break;
 	case DLL_PROCESS_DETACH:
